/* automatically generated by rust-bindgen 0.55.1 */

pub const PATError_PAT_SUCCESS: PATError = 0;
pub const PATError_PAT_AUDIO_DEVICE_ERROR: PATError = 1;
pub const PATError_PAT_DEMUX_ERROR: PATError = 2;
pub const PATError_PAT_DECODE_ERROR: PATError = 3;
pub const PATError_PAT_FILE_OPEN_ERROR: PATError = 4;
pub const PATError_PAT_INTERRUPTED_ERROR: PATError = 5;
pub const PATError_PAT_MEMORY_ERROR: PATError = 6;
pub const PATError_PAT_RESAMPLE_ERROR: PATError = 7;
pub const PATError_PAT_TERMINATED_ERROR: PATError = 8;
pub const PATError_PAT_UNKNOWN_ERROR: PATError = 9;
pub type PATError = ::std::os::raw::c_uint;
extern "C" {
    pub fn pat_error_to_string(error: PATError) -> *mut ::std::os::raw::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct PAT {
    _unused: [u8; 0],
}
pub type pat_finished_finished_cb_t = ::std::option::Option<
    unsafe extern "C" fn(status: PATError, data: *mut ::std::os::raw::c_void),
>;
extern "C" {
    pub fn pat_open(pat_out: *mut *mut PAT) -> PATError;
}
extern "C" {
    pub fn pat_play(pat: *const PAT, pat_audio_path: *const ::std::os::raw::c_char) -> PATError;
}
extern "C" {
    pub fn pat_skip(pat: *const PAT) -> PATError;
}
extern "C" {
    pub fn pat_pause(pat: *const PAT) -> PATError;
}
extern "C" {
    pub fn pat_resume(pat: *const PAT) -> PATError;
}
extern "C" {
    pub fn pat_close(pat: *mut PAT);
}
